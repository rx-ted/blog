package asia.rxted.blog.config.bean;

// import java.util.List;

// import org.apache.http.HttpHost;
// import org.apache.http.auth.AuthScope;
// import org.apache.http.auth.UsernamePasswordCredentials;
// import org.apache.http.client.CredentialsProvider;
// import org.apache.http.impl.client.BasicCredentialsProvider;
// import org.elasticsearch.client.RestClient;
// import org.springframework.beans.factory.annotation.Value;
// import org.springframework.context.annotation.Bean;
// import org.springframework.context.annotation.Configuration;

// import co.elastic.clients.elasticsearch.ElasticsearchClient;
// import co.elastic.clients.json.jackson.JacksonJsonpMapper;
// import co.elastic.clients.transport.rest_client.RestClientTransport;

// @Configuration

public class RestConfig {
    // @Value("${spring.elasticsearch.username}")
    // private String username;
    // @Value("${spring.elasticsearch.password}")
    // private String password;
    // @Value("${spring.elasticsearch.uris}")
    // private List<String> uris;

    // idea#1
    // @Bean
    // public RestClient restClient() {
    // return RestClient.builder(new HttpHost("localhost", 9200, "http")).build();
    // }

    // idea#2
    // @Bean
    // public ElasticsearchClient elasticsearchClient() {
    // final CredentialsProvider credentialsProvider = new
    // BasicCredentialsProvider();
    // credentialsProvider.setCredentials(AuthScope.ANY, new
    // UsernamePasswordCredentials(
    // username, password));

    // RestClient restClient = RestClient.builder(HttpHost.create(uris.get(0)))
    // .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder
    // .setDefaultCredentialsProvider(credentialsProvider))
    // .build();

    // RestClientTransport transport = new RestClientTransport(restClient, new
    // JacksonJsonpMapper());
    // return new ElasticsearchClient(transport);
    // }

    // idea#3
    // ElasticsearchTemplate
}
