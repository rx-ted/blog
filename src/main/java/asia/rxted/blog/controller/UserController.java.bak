package asia.rxted.blog.controller;

import java.util.ArrayList;
import java.util.List;

import javax.validation.constraints.NotNull;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;

import asia.rxted.blog.common.ResultCode;
import asia.rxted.blog.common.ResultMessage;
import asia.rxted.blog.common.ResultUtil;
import asia.rxted.blog.common.ServiceException;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestHeader;

@Api(tags = "User interface")
@RestController()
@RequestMapping("users")
public class UserController {
    // @Autowired
    // private UserServer userServer;


    // @Autowired
    // private RedisUtil redisUtil;

    // @GetMapping()
    // public void get() {
    //     redisUtil.set("key", "1111");
    // }

    // @ApiOperation(value = "find users")
    // @GetMapping("{username}")
    // public ResultMessage<List<User>> getUser(@PathVariable String username) {
    //     LambdaQueryWrapper<User> wrapper = new LambdaQueryWrapper<>();
    //     wrapper.eq(User::getUsername, username);
    //     List<User> users = userServer.list(wrapper);
    //     if (users.size() == 0) {
    //         return ResultUtil.data(new ArrayList<User>());
    //     }
    //     return ResultUtil.data(users);
    // }

    // @ApiOperation(value = "User register")
    // @PostMapping("/register")
    // public ResultMessage<Object> registerUser(@RequestBody UserRegister
    // userRegister) {
    // return null;
    // }

    // @ApiOperation(value = "User Login")
    // @PostMapping("/login")
    // public ResultMessage<Object> loginUser(
    //         @NotNull(message = "用户名不能为空") @RequestParam String username,
    //         @NotNull(message = "密码不能为空") @RequestParam String password,
    //         @RequestHeader String uuid) {
    //     return null;
    // }

    // @ApiOperation(value = "User forget password")
    // @PostMapping("/forget-password")
    // public ResultMessage<Object> ForgetPassword(@RequestBody UserForgetPassword
    // userForgetPassword) {
    // return null;
    // }

    // @ApiOperation(value = "User log out")
    // @PostMapping("/logout/{username}")
    // public ResultMessage<Object> logoutUser(@PathVariable String username) {
    //     // userServer.logout(username);
    //     return null;
    // }

}
